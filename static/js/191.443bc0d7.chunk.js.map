{"version":3,"file":"static/js/191.443bc0d7.chunk.js","mappings":"iOAMA,MA0BA,EA1BqBA,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IAC3BC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCF,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CACLC,OAAO,MACPC,MAAM,QACNC,SAAUX,EACVY,OACEP,EAAAA,EAAAA,KAACQ,EAAAA,GAAM,CACLC,KAAK,UACLC,QAASA,KACPZ,GAASa,EAAAA,EAAAA,OACTlB,GAAU,EAAE,EACZS,SACH,eAKD,C,yDC3BV,MAeA,EAfuBU,KAEnBZ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oBAAmBC,UAChCF,EAAAA,EAAAA,KAACa,EAAAA,GAAW,CACVC,OAAO,MACPC,MAAM,MACNC,UAAU,uBACVC,aAAc,CAAC,EACfC,aAAa,uBACbC,YAAY,UACZC,SAAS,a,uECXjB,QAAuB,uB,2CCMvB,MA6BA,EA7BiBC,KACf,MAAM,WAAEC,EAAU,KAAEC,IAASC,EAAAA,EAAAA,MACvB,QAAEC,EAAO,UAAEC,IAAcC,EAAAA,EAAAA,KAC/B,OACEC,EAAAA,EAAAA,MAAA,QAAA1B,SAAA,CACGoB,GACCM,EAAAA,EAAAA,MAAA,KAAA1B,SAAA,CACGqB,EAAKM,KAAK,0CAAwC,KACnD7B,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAACC,GAAG,YAAW7B,UAClBF,EAAAA,EAAAA,KAAA,QAAMC,UAAW+B,EAAS9B,SAAC,mBAI/B0B,EAAAA,EAAAA,MAAA,KAAA1B,SAAA,CAAG,gBACa,KACdF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAACC,GAAG,SAAS9B,UAAW+B,EAAS9B,SAAC,WAE/B,IAAI,KACT,KACHF,EAAAA,EAAAA,KAAC8B,EAAAA,GAAI,CAAC7B,UAAW+B,EAAUD,GAAG,YAAW7B,SAAC,aAElC,OAGXuB,IAAWzB,EAAAA,EAAAA,KAACR,EAAAA,EAAY,IACxBkC,IAAa1B,EAAAA,EAAAA,KAACY,EAAAA,EAAc,MACxB,C,0DC9BJ,MAAMe,EAAqBA,KAIzB,CACLF,SAJc7B,EAAAA,EAAAA,IAAYqC,EAAAA,IAK1BP,WAJgB9B,EAAAA,EAAAA,IAAYsC,EAAAA,K","sources":["components/error-message/ErrorMessage.js","components/loading-spinner/LoadingSpinner.js","webpack://goit-react-hw-08-phonebook/./src/components/pages/home-page/HomePage.module.css?b0f9","components/pages/home-page/HomePage.js","hooks/useLoadingAndError.js"],"sourcesContent":["import { Button, Result } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectErrorMessage } from 'features/auth/selectors';\nimport { resetError } from 'features/auth/authSlice';\n\nconst ErrorMessage = () => {\n  const navigate = useNavigate();\n  const errorMessage = useSelector(selectErrorMessage);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"loading-container\">\n      <Result\n        status=\"404\"\n        title=\"ERROR\"\n        subTitle={errorMessage}\n        extra={\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              dispatch(resetError());\n              navigate(-1);\n            }}\n          >\n            Go Back\n          </Button>\n        }\n      />\n    </div>\n  );\n};\nexport default ErrorMessage;\n","import { ProgressBar } from 'react-loader-spinner';\n\nconst LoadingSpinner = () => {\n  return (\n    <div className=\"loading-container\">\n      <ProgressBar\n        height=\"120\"\n        width=\"120\"\n        ariaLabel=\"progress-bar-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"progress-bar-wrapper\"\n        borderColor=\"#F4442E\"\n        barColor=\"#51E5FF\"\n      />\n    </div>\n  );\n};\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"HomePage_link__AfUgc\"};","import { useAuth } from 'hooks';\nimport { Link } from 'react-router-dom';\nimport css from './HomePage.module.css';\nimport { useLoadingAndError } from 'hooks/useLoadingAndError';\nimport ErrorMessage from 'components/error-message/ErrorMessage';\nimport LoadingSpinner from 'components/loading-spinner/LoadingSpinner';\n\nconst HomePage = () => {\n  const { isLoggedIn, user } = useAuth();\n  const { isError, isLoading } = useLoadingAndError();\n  return (\n    <main>\n      {isLoggedIn ? (\n        <p>\n          {user.name}, to see the list of contacts go to the{' '}\n          <Link to=\"/contacts\">\n            <span className={css.link}>contacts</span>\n          </Link>\n        </p>\n      ) : (\n        <p>\n          hello, please{' '}\n          <Link to=\"/login\" className={css.link}>\n            log in\n          </Link>{' '}\n          or{' '}\n          <Link className={css.link} to=\"/register\">\n            register\n          </Link>{' '}\n        </p>\n      )}\n      {isError && <ErrorMessage />}\n      {isLoading && <LoadingSpinner />}\n    </main>\n  );\n};\nexport default HomePage;\n","import { useSelector } from 'react-redux';\nimport { selectIsError, selectIsLoading } from 'features/auth/selectors';\n\nexport const useLoadingAndError = () => {\n  const isError = useSelector(selectIsError);\n  const isLoading = useSelector(selectIsLoading);\n\n  return {\n    isError,\n    isLoading,\n  };\n};\n"],"names":["ErrorMessage","navigate","useNavigate","errorMessage","useSelector","selectErrorMessage","dispatch","useDispatch","_jsx","className","children","Result","status","title","subTitle","extra","Button","type","onClick","resetError","LoadingSpinner","ProgressBar","height","width","ariaLabel","wrapperStyle","wrapperClass","borderColor","barColor","HomePage","isLoggedIn","user","useAuth","isError","isLoading","useLoadingAndError","_jsxs","name","Link","to","css","selectIsError","selectIsLoading"],"sourceRoot":""}